/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

import BLL.NNhaCungCapBLL;
import BLL.ProductBLL;
import BLL.NLoaiSanPhamBLL;
import DAL.SanPham;
import DAL.LoaiSanPham;
import DAL.NhaCungCap;
import java.awt.HeadlessException;
import java.awt.Image;
import java.io.File;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.StandardCopyOption;
import java.sql.SQLException;
import java.util.List;
import javax.swing.ImageIcon;
import javax.swing.JComboBox;
import javax.swing.JFileChooser;
import javax.swing.JOptionPane;
import javax.swing.filechooser.FileNameExtensionFilter;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Windows
 */
public class Product extends javax.swing.JFrame {
private String selectedImagePath = null; // Đường dẫn ảnh đã chọn
private String savedImageName = null; // Tên mới sẽ được copy và lưu
    /**
     * Creates new form Product
     */
    public Product() {
        initComponents();
        loadCategorytoComboBox();
        loadDataToTable();
        loadSuppliertoComboBox();
    }
  
private void loadDataToTable() {
    try {
         TableProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {},
            new String [] {
                "masanpham", "tensanpham", "maloai", "mancc", "gia", "soluongton", "duongdananh"
            }
        ));
        ProductBLL dao = new ProductBLL();
        List<SanPham> list = dao.getAllProduct();
          System.out.println(list.size());
        DefaultTableModel model = (DefaultTableModel) TableProduct.getModel();
        model.setRowCount(0); 
        for (SanPham b : list) {
        System.out.println(b); // In ra Book nhờ toString()
        model.addRow(new Object[]{
        b.getMaSanPham(), b.getTenSanPham(),b.getMaLoai(),b.getMaNcc(), b.getGia(), b.getSoLuongTon(), b.getDuongDanAnh()
        });
    }
    } catch  (SQLException e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Lỗi khi load dữ liệu!");
    }
}
private void loadCategorytoComboBox (){

    NLoaiSanPhamBLL loaisanpham = new NLoaiSanPhamBLL();
    try {
        List<LoaiSanPham> categories = loaisanpham.getAllCategory();
        CategoryCbx.removeAllItems();
        for (LoaiSanPham category : categories) {
            String display = category.getMaLoai() + " - " + category.getTenLoai();
        CategoryCbx.addItem(display);  // Thêm đối tượng trực tiếp
        }
    } catch (SQLException ex) {
        ex.printStackTrace();
    }
}
private void loadSuppliertoComboBox (){

    NNhaCungCapBLL loaisanpham = new NNhaCungCapBLL();
    
        List<NhaCungCap> categories = loaisanpham.selectAll();
        SupplierCbx.removeAllItems();
        for (NhaCungCap category : categories) {
            String display = category.getMaNcc()+ " - " + category.getTenNcc();
            SupplierCbx.addItem(display);  // Thêm đối tượng trực tiếp
        }
    
}
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        ProductName = new javax.swing.JTextField();
        jLabel2 = new javax.swing.JLabel();
        Price = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        ImagePath = new javax.swing.JTextField();
        StockQuantity = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        SupplierCbx = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        CategoryCbx = new javax.swing.JComboBox<>();
        jButton1 = new javax.swing.JButton();
        jLabel8 = new javax.swing.JLabel();
        ProductID = new javax.swing.JTextField();
        updateProduct = new javax.swing.JButton();
        deleteProduct = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        TableProduct = new javax.swing.JTable();
        InputSearch = new javax.swing.JTextField();
        jButton2 = new javax.swing.JButton();
        chooseFile = new javax.swing.JLabel();
        jButton3 = new javax.swing.JButton();
        jPanel1 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jLabel9 = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 0, 0));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 255, 255));
        jLabel1.setText("Product name");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 91, -1, -1));

        ProductName.setCaretColor(new java.awt.Color(102, 102, 255));
        ProductName.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ProductNameActionPerformed(evt);
            }
        });
        getContentPane().add(ProductName, new org.netbeans.lib.awtextra.AbsoluteConstraints(153, 88, 170, -1));

        jLabel2.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        jLabel2.setForeground(new java.awt.Color(255, 255, 255));
        jLabel2.setText("Price");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 125, -1, -1));

        Price.setCaretColor(new java.awt.Color(51, 51, 255));
        Price.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                PriceActionPerformed(evt);
            }
        });
        getContentPane().add(Price, new org.netbeans.lib.awtextra.AbsoluteConstraints(153, 122, 170, -1));

        jLabel3.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(255, 255, 255));
        jLabel3.setText("ImagePath");
        getContentPane().add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 159, -1, -1));

        jLabel4.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        jLabel4.setForeground(new java.awt.Color(255, 255, 255));
        jLabel4.setText("Stock ");
        getContentPane().add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(37, 193, -1, -1));

        ImagePath.setCaretColor(new java.awt.Color(51, 51, 255));
        getContentPane().add(ImagePath, new org.netbeans.lib.awtextra.AbsoluteConstraints(153, 156, 170, -1));

        StockQuantity.setCaretColor(new java.awt.Color(51, 51, 255));
        StockQuantity.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StockQuantityActionPerformed(evt);
            }
        });
        getContentPane().add(StockQuantity, new org.netbeans.lib.awtextra.AbsoluteConstraints(153, 190, 170, -1));

        jLabel5.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        jLabel5.setForeground(new java.awt.Color(255, 255, 255));
        jLabel5.setText("Supplier");
        getContentPane().add(jLabel5, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 90, -1, -1));

        SupplierCbx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        getContentPane().add(SupplierCbx, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 90, 143, -1));

        jLabel6.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        jLabel6.setForeground(new java.awt.Color(255, 255, 255));
        jLabel6.setText("Category");
        getContentPane().add(jLabel6, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 130, -1, -1));

        CategoryCbx.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        CategoryCbx.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                CategoryCbxActionPerformed(evt);
            }
        });
        getContentPane().add(CategoryCbx, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 130, 143, -1));

        jButton1.setFont(new java.awt.Font("JetBrains Mono ExtraBold", 1, 14)); // NOI18N
        jButton1.setText("Add Product");
        jButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton1MouseClicked(evt);
            }
        });
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 320, 157, 43));

        jLabel8.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        jLabel8.setForeground(new java.awt.Color(255, 255, 255));
        jLabel8.setText("ProductID");
        getContentPane().add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(370, 170, -1, -1));
        getContentPane().add(ProductID, new org.netbeans.lib.awtextra.AbsoluteConstraints(430, 170, 143, -1));

        updateProduct.setFont(new java.awt.Font("JetBrains Mono ExtraBold", 1, 14)); // NOI18N
        updateProduct.setText("Update Product");
        updateProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                updateProductMouseClicked(evt);
            }
        });
        updateProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                updateProductActionPerformed(evt);
            }
        });
        getContentPane().add(updateProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 380, 157, 43));

        deleteProduct.setFont(new java.awt.Font("JetBrains Mono ExtraBold", 1, 14)); // NOI18N
        deleteProduct.setText("Delete Product");
        deleteProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                deleteProductMouseClicked(evt);
            }
        });
        deleteProduct.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                deleteProductActionPerformed(evt);
            }
        });
        getContentPane().add(deleteProduct, new org.netbeans.lib.awtextra.AbsoluteConstraints(640, 450, 157, 43));

        TableProduct.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        TableProduct.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TableProductMouseClicked(evt);
            }
        });
        jScrollPane2.setViewportView(TableProduct);

        getContentPane().add(jScrollPane2, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 300, 580, 215));
        getContentPane().add(InputSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 250, 340, 30));

        jButton2.setFont(new java.awt.Font("JetBrains Mono ExtraBold", 1, 14)); // NOI18N
        jButton2.setText("Search");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(400, 250, -1, 30));

        chooseFile.setFont(new java.awt.Font("JetBrains Mono", 0, 18)); // NOI18N
        chooseFile.setForeground(new java.awt.Color(255, 255, 255));
        chooseFile.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        chooseFile.setText("Image");
        chooseFile.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 255, 255)));
        chooseFile.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                chooseFileMouseClicked(evt);
            }
        });
        getContentPane().add(chooseFile, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 80, 190, 220));

        jButton3.setFont(new java.awt.Font("JetBrains Mono", 0, 12)); // NOI18N
        jButton3.setText("Choose File Image");
        jButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton3MouseClicked(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(440, 210, -1, -1));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setForeground(new java.awt.Color(255, 255, 255));

        jLabel7.setFont(new java.awt.Font("Segoe UI", 1, 27)); // NOI18N
        jLabel7.setText("Manage Product");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(308, 308, 308)
                .addComponent(jLabel7)
                .addContainerGap(360, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel7)
                .addContainerGap(17, Short.MAX_VALUE))
        );

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, 60));

        jLabel9.setFont(new java.awt.Font("JetBrains Mono ExtraBold", 1, 14)); // NOI18N
        jLabel9.setForeground(new java.awt.Color(255, 255, 255));
        jLabel9.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel9.setText("Product Image");
        getContentPane().add(jLabel9, new org.netbeans.lib.awtextra.AbsoluteConstraints(620, 60, 199, -1));

        jPanel2.setBackground(new java.awt.Color(33, 47, 61));
        jPanel2.setForeground(new java.awt.Color(255, 255, 255));

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 880, Short.MAX_VALUE)
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGap(0, 490, Short.MAX_VALUE)
        );

        getContentPane().add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 880, 490));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void PriceActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_PriceActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_PriceActionPerformed

    private void ProductNameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ProductNameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_ProductNameActionPerformed

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton1MouseClicked
        // TODO add your handling code here: Add product
       try {
        if (selectedImagePath == null || savedImageName == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn ảnh trước khi thêm sản phẩm!");
            return;
        }

        // Lấy thông tin loại sản phẩm từ combobox
        String selectedItem = (String) CategoryCbx.getSelectedItem();
        String[] parts = selectedItem.split("-", 2);
        int maloai = Integer.parseInt(parts[0].trim());
        // Lấy thông tin nha cung cap  từ combobox
         String selectedItemSupplier = (String) SupplierCbx.getSelectedItem();
        String[] partSupplier = selectedItemSupplier.split("-", 2);
        String maNcc = partSupplier[0].trim();
        
        // Đường dẫn đích lưu ảnh
        String destDir = "Assets" + File.separator + "Image" + File.separator;
        File sourceFile = new File(selectedImagePath);
        File destFile = new File(destDir + savedImageName);

        // Copy ảnh vào thư mục dự án
        Files.copy(sourceFile.toPath(), destFile.toPath(), StandardCopyOption.REPLACE_EXISTING);

        // Tạo đối tượng sản phẩm
        ProductBLL product = new ProductBLL();
        SanPham furniture = new SanPham(
            ProductID.getText(),
            ProductName.getText(),
            maloai,
            maNcc,
            Float.parseFloat(Price.getText()),
            Integer.parseInt(StockQuantity.getText()),
            destDir + savedImageName // 
        );

        // Gọi BLL để thêm sản phẩm
        boolean isSuccess = product.insertProduct(furniture);
        if (isSuccess) {
            JOptionPane.showMessageDialog(this, "Thêm sản phẩm thành công!");
            loadDataToTable();
        } else {
            JOptionPane.showMessageDialog(this, "Thêm sản phẩm thất bại!");
        }

    } catch (HeadlessException | NumberFormatException | SQLException | IOException e) {
        JOptionPane.showMessageDialog(this, "Lỗi: " + e.getMessage());
    }
    }//GEN-LAST:event_jButton1MouseClicked

    private void updateProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_updateProductMouseClicked
        // TODO add your handling code here:
    ProductBLL product = new ProductBLL();
    try {
        // Lấy dữ liệu loại sản phẩm từ combobox
        String selectedItem = (String) CategoryCbx.getSelectedItem();
        String[] parts = selectedItem.split("-", 2);
        int maloai = Integer.parseInt(parts[0].trim());
        // Lấy thông tin nha cung cap  từ combobox
         String selectedItemSupplier = (String) SupplierCbx.getSelectedItem();
        String[] partSupplier = selectedItemSupplier.split("-", 2);
        String maNcc = partSupplier[0].trim();
         // Đường dẫn đích lưu ảnh
        String destDir = "Assets" + File.separator + "Image" + File.separator;
        File sourceFile = new File(selectedImagePath);
        File destFile = new File(destDir + savedImageName);
        // Copy ảnh vào thư mục dự án
        Files.copy(sourceFile.toPath(), destFile.toPath(), StandardCopyOption.REPLACE_EXISTING);
        // Tạo đối tượng sản phẩm với đường dẫn ảnh mới
        SanPham furniture = new SanPham(
            ProductID.getText(),
            ProductName.getText(),
            maloai,
            maNcc,
            Float.parseFloat(Price.getText()),
            Integer.parseInt(StockQuantity.getText()),
             destFile.getAbsolutePath()
        );
        boolean isSuccess = product.updateProduct(furniture);
        if (isSuccess) {
            JOptionPane.showMessageDialog(this, "Sửa sản phẩm thành công!");
        } else {
            JOptionPane.showMessageDialog(this, "Sửa sản phẩm thất bại!");
        }
        loadDataToTable(); // làm mới bảng
    } catch (NumberFormatException e) {
        JOptionPane.showMessageDialog(this, "Giá tiền hoặc số lượng không hợp lệ!");
    } catch (SQLException | IOException e) {
        JOptionPane.showMessageDialog(this, "Lỗi khi sửa sản phẩm: " + e.getMessage());
        e.printStackTrace();
    }
    }//GEN-LAST:event_updateProductMouseClicked

    private void updateProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_updateProductActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_updateProductActionPerformed

    private void deleteProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_deleteProductMouseClicked
        // TODO add your handling code here:
       ProductBLL product = new ProductBLL();
    try {
        String imagePath = ImagePath.getText(); // Đường dẫn ảnh
        // Xóa file ảnh (nếu tồn tại)
        if (imagePath != null && !imagePath.isEmpty()) {
            File imageFile = new File(imagePath);
            if (imageFile.exists()) {
                if (imageFile.delete()) {
                    System.out.println("Ảnh đã được xóa: " + imagePath);
                } else {
                    System.out.println("Không thể xóa ảnh: " + imagePath);
                }
            } else {
                System.out.println("Ảnh không tồn tại: " + imagePath);
            }
        }

        // Xóa sản phẩm trong database
        boolean success = product.deleteProduct(ProductID.getText());
        if (success) {
            JOptionPane.showMessageDialog(this, "Xóa sản phẩm thành công!");
            loadDataToTable(); // reload bảng
        } else {
            JOptionPane.showMessageDialog(this, "Xóa sản phẩm thất bại!");
        }
    } catch (SQLException e) {
        JOptionPane.showMessageDialog(this, "Lỗi khi xóa sản phẩm: " + e.getMessage());
        e.printStackTrace();
    }

    }//GEN-LAST:event_deleteProductMouseClicked

    private void deleteProductActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_deleteProductActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_deleteProductActionPerformed

    private void TableProductMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TableProductMouseClicked
        // TODO add your handling code here:
        int selectedRow = TableProduct.getSelectedRow();
        if (selectedRow >= 0) {
             DefaultTableModel model = (DefaultTableModel) TableProduct.getModel();
                String productId = model.getValueAt(selectedRow, 0).toString(); 
                String productName = model.getValueAt(selectedRow, 1).toString(); 
                String price = model.getValueAt(selectedRow, 4).toString();
                String stock = model.getValueAt(selectedRow, 5).toString();
                String imagePath = model.getValueAt(selectedRow, 6).toString();
          

                 ProductID.setText(productId);
                 ProductName.setText(productName);
                 Price.setText(price);
                 StockQuantity.setText(stock);
                 ImagePath.setText(imagePath);
           
                 ImageIcon imageIcon = new ImageIcon(imagePath);
                chooseFile.setIcon(imageIcon);  // label là JLabel
                chooseFile.setText("");         // (không bắt buộc) để xóa text nếu có
                 

         }
    }//GEN-LAST:event_TableProductMouseClicked

    private void StockQuantityActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StockQuantityActionPerformed
        // TODO add your handling code here:
              
    }//GEN-LAST:event_StockQuantityActionPerformed

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        String keyword = InputSearch.getText().trim();
        ProductBLL productBLL = new ProductBLL();
        try {
            List<SanPham> result = productBLL.searchProductByName(keyword);
            loadTable(result); // Cập nhật bảng với kết quả tìm kiếm
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null, "Lỗi khi tìm kiếm: " + ex.getMessage());
            ex.printStackTrace();
        }
    }//GEN-LAST:event_jButton2MouseClicked

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
         // TODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void chooseFileMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_chooseFileMouseClicked
        // TODO add your handling code here:
        
        
    }//GEN-LAST:event_chooseFileMouseClicked

    private void jButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton3MouseClicked
        // TODO add your handling code here:
      JFileChooser fileChooser = new JFileChooser();

    // Chỉ cho phép chọn file ảnh
    FileNameExtensionFilter filter = new FileNameExtensionFilter(
        "Image files", "jpg", "jpeg", "png", "gif");
    fileChooser.setFileFilter(filter);

    int result = fileChooser.showOpenDialog(null);
    if (result == JFileChooser.APPROVE_OPTION) {
        File selectedFile = fileChooser.getSelectedFile();
        selectedImagePath = selectedFile.getAbsolutePath(); // Lưu đường dẫn ảnh gốc

        // Đặt tên mới cho file ảnh
         savedImageName = "sp_" + System.currentTimeMillis() + ".png";
        String destDir = "Assets" + File.separator + "Image" + File.separator;
        String fullDestPath = destDir + savedImageName;
        // Gán đường dẫn mới cho text field (nếu bạn cần hiển thị)
        ImagePath.setText(fullDestPath);

        // Resize ảnh cho vừa JLabel
        ImageIcon imageIcon = new ImageIcon(selectedImagePath);
        Image image = imageIcon.getImage().getScaledInstance(
        chooseFile.getWidth(), chooseFile.getHeight(), Image.SCALE_SMOOTH);
        imageIcon = new ImageIcon(image);

        chooseFile.setText(""); // Xóa chữ cũ
        chooseFile.setIcon(imageIcon); // Gán ảnh
    }
    }//GEN-LAST:event_jButton3MouseClicked

    private void CategoryCbxActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_CategoryCbxActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_CategoryCbxActionPerformed
    public void loadTable(List<SanPham> list) {
        DefaultTableModel model = (DefaultTableModel) TableProduct.getModel();
        model.setRowCount(0); // Xóa dữ liệu cũ

        for (SanPham p : list) {
            Object[] row = new Object[]{
                p.getMaSanPham(),
                p.getTenSanPham(),
                p.getMaLoai(),
                p.getMaNcc(),
                p.getGia(),
                p.getSoLuongTon(),
                p.getDuongDanAnh()
            };
            model.addRow(row);
        }
    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Product.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Product().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox<String> CategoryCbx;
    private javax.swing.JTextField ImagePath;
    private javax.swing.JTextField InputSearch;
    private javax.swing.JTextField Price;
    private javax.swing.JTextField ProductID;
    private javax.swing.JTextField ProductName;
    private javax.swing.JTextField StockQuantity;
    private javax.swing.JComboBox<String> SupplierCbx;
    private javax.swing.JTable TableProduct;
    private javax.swing.JLabel chooseFile;
    private javax.swing.JButton deleteProduct;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton updateProduct;
    // End of variables declaration//GEN-END:variables
}
