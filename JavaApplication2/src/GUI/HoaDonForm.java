/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package GUI;

/**
 *
 * @author ADMIN
 */
import BLL.HoaDonBLL;
import BLL.KhachhangBushd;
import BLL.NhanvienBushd;
import DAL.HoaDon; // nếu chưa có
import DAL.KhachHang;
import DAL.NhanVien;
import java.time.LocalDateTime;
import javax.swing.table.DefaultTableModel;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;

public class HoaDonForm extends javax.swing.JFrame {
    
    

    private HoaDonBLL hoaDonBLL = new HoaDonBLL();
    private KhachhangBushd khachHangBLL = new KhachhangBushd(); 
    private void loadTable() {
    DefaultTableModel model = new DefaultTableModel();
    model.setColumnIdentifiers(new String[]{"Mã HĐ", "Mã KH", "Mã NV", "Ngày Lập"});

    ArrayList<HoaDon> list = hoaDonBLL.getAllHoaDon();
    for (HoaDon hd : list) {
        model.addRow(new Object[]{
            hd.getMaHd(),
            hd.getMaKh(),
            hd.getMaNv(),
            hd.getNgayLap()
        });
    }

    tblHoaDon.setModel(model);
}
    
    
    /**
     * Creates new form HoaDonForm
     */
    public HoaDonForm() {
        initComponents();
        loadTable();
        loadNhanVienToComboBox();
        loadKhachHangToComboBox();
 
    }
    private void resetForm() {
    txtMaHd.setText("");
    cbNhanvienhd.setSelectedIndex(0);
    cbKhachhanghd.setSelectedIndex(0);
    jDateChooserHoadon.setDate(null);
}
    // Trong class GUI của bạn
   private void loadNhanVienToComboBox() {
        NhanvienBushd nvBLL = new NhanvienBushd();
        List<NhanVien> listNV = nvBLL.getAllNhanVien();
        
        // Xóa dữ liệu cũ nếu có
        cbNhanvienhd.removeAllItems();
        
        // Thêm item mặc định nếu cần
        cbNhanvienhd.addItem("-- Chọn nhân viên --");
        
        // Thêm dữ liệu từ BLL
        for (NhanVien nv : listNV) {
            cbNhanvienhd.addItem(nv.getMaNv() + " - " + nv.getTenNv());
        }
    
}
   // Trong phương thức khởi tạo hoặc khi load form
private void loadKhachHangToComboBox() {
    

       
    try {
        List<String> listTenKH = khachHangBLL.getAllTenKhachHang();

        cbKhachhanghd.removeAllItems(); // ComboBox của khách hàng, không phải nhân viên
        cbKhachhanghd.addItem("-- Chọn khách hàng --");

        for (String tenKH : listTenKH) {
            cbKhachhanghd.addItem(tenKH);
        }
    } catch (Exception e) {
        e.printStackTrace();
    }
}

        //model.addElement("-- Chọn khách hàng --"); // Item mặc định
        
//        for (String tenKH : listTenKH) {
//            model.addElement(tenKH);
//        }
//        
//        // 3. Gán model cho ComboBox
//        cbKhachhanghd.setModel(model);
//        cbKhachhanghd.setSelectedIndex(-1); // Không chọn gì ban đầu
        
    

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        txtMaHd = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblHoaDon = new javax.swing.JTable();
        jDateChooserHoadon = new com.toedter.calendar.JDateChooser();
        jPanel2 = new javax.swing.JPanel();
        jLabel7 = new javax.swing.JLabel();
        jDateChooser1 = new com.toedter.calendar.JDateChooser();
        jDateChooser2 = new com.toedter.calendar.JDateChooser();
        jLabel8 = new javax.swing.JLabel();
        jPanel3 = new javax.swing.JPanel();
        jButton5 = new javax.swing.JButton();
        btThemhd = new javax.swing.JButton();
        btnSuahd = new javax.swing.JButton();
        btnXoaHD = new javax.swing.JButton();
        btnResetHD = new javax.swing.JButton();
        cbNhanvienhd = new javax.swing.JComboBox<>();
        txtTenKh = new javax.swing.JTextField();
        txtSdtKh = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Hóa đơn"));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setText("Mã hóa đơn : ");
        jPanel1.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, 80, -1));

        jLabel2.setText("Mã khách hàng :");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 90, -1));

        jLabel3.setText("Mã nhân viên : ");
        jPanel1.add(jLabel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, 90, -1));

        jLabel4.setText("Ngày lập :");
        jPanel1.add(jLabel4, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 190, 70, -1));

        txtMaHd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtMaHdActionPerformed(evt);
            }
        });
        jPanel1.add(txtMaHd, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 40, 170, -1));

        tblHoaDon.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Title 1", "Title 2", "Title 3", "Title 4"
            }
        ));
        tblHoaDon.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblHoaDonMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblHoaDon);

        jPanel1.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 277, 610, 190));
        jPanel1.add(jDateChooserHoadon, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 190, 170, -1));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(" Tra cứu hóa đơn"));
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel7.setText("Từ ngày : ");
        jPanel2.add(jLabel7, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 260, 60, -1));
        jPanel2.add(jDateChooser1, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 260, 140, -1));
        jPanel2.add(jDateChooser2, new org.netbeans.lib.awtextra.AbsoluteConstraints(110, 320, 140, -1));

        jLabel8.setText("Đến ngày : ");
        jPanel2.add(jLabel8, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 320, -1, -1));

        jPanel1.add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(630, 20, 280, 450));

        jPanel3.setBorder(new javax.swing.border.SoftBevelBorder(javax.swing.border.BevelBorder.RAISED));
        jPanel3.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButton5.setText("Xem chi tiết hóa đơn");
        jButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton5MouseClicked(evt);
            }
        });
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        jPanel3.add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 150, -1, -1));

        btThemhd.setText("Thêm");
        btThemhd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btThemhdActionPerformed(evt);
            }
        });
        jPanel3.add(btThemhd, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        btnSuahd.setText("Sửa");
        btnSuahd.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                btnSuahdMouseClicked(evt);
            }
        });
        btnSuahd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuahdActionPerformed(evt);
            }
        });
        jPanel3.add(btnSuahd, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 30, -1, -1));

        btnXoaHD.setText("Xóa");
        btnXoaHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaHDActionPerformed(evt);
            }
        });
        jPanel3.add(btnXoaHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 80, -1, -1));

        btnResetHD.setText("Reset");
        btnResetHD.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnResetHDActionPerformed(evt);
            }
        });
        jPanel3.add(btnResetHD, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, -1, -1));

        jPanel1.add(jPanel3, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 50, 210, 190));

        jPanel1.add(cbNhanvienhd, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 140, 170, -1));

        txtTenKh.setText("jTextField1");
        jPanel1.add(txtTenKh, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 80, -1, -1));

        txtSdtKh.setText("jTextField2");
        jPanel1.add(txtSdtKh, new org.netbeans.lib.awtextra.AbsoluteConstraints(120, 110, -1, -1));

        getContentPane().add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 10, 940, 480));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btThemhdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btThemhdActionPerformed
        // TODO add your handling code here:
        
    
   
                                                                                

    String maHD = txtMaHd.getText().trim();
    KhachHang selectedKH = (KhachHang) cbKhachhanghd.getSelectedItem();
    NhanVien selectedNV = (NhanVien) cbNhanvienhd.getSelectedItem();
    LocalDateTime ngayLap = LocalDateTime.now();

    // Kiểm tra các trường bắt buộc
    if (maHD.isEmpty() || selectedKH == null || selectedNV == null) {
        JOptionPane.showMessageDialog(null, 
            "Vui lòng nhập đầy đủ thông tin!", 
            "Thiếu dữ liệu", 
            JOptionPane.WARNING_MESSAGE);
        return;
    }

    String maKH = selectedKH.getMaKh();  // Lấy mã khách hàng từ object
    String maNV = selectedNV.getMaNv();  // Lấy mã nhân viên từ object

    HoaDon hd = new HoaDon(maHD, maKH, maNV, ngayLap);

    if (hoaDonBLL.insertHoaDon(hd)) {
        JOptionPane.showMessageDialog(null, 
            "Thêm hóa đơn thành công!", 
            "Thành công", 
            JOptionPane.INFORMATION_MESSAGE);
        loadTable();
        resetForm();
    } else {
        JOptionPane.showMessageDialog(null, 
            "Thêm hóa đơn thất bại!", 
            "Lỗi", 
            JOptionPane.ERROR_MESSAGE);
    }


    }//GEN-LAST:event_btThemhdActionPerformed
    
    private void btnSuahdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuahdActionPerformed
        
    }//GEN-LAST:event_btnSuahdActionPerformed

    private void tblHoaDonMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblHoaDonMouseClicked
        // TODO add your handling code here:       
        
        int selectedRow = tblHoaDon.getSelectedRow();
if (selectedRow != -1) {
    try {
        // 1. Lấy mã hóa đơn
        txtMaHd.setText(tblHoaDon.getValueAt(selectedRow, 0).toString());
        
        // 2. Xử lý ComboBox khách hàng (thay thế txtkh)
        String maKH = tblHoaDon.getValueAt(selectedRow, 1).toString();
        setSelectedKhachHangInComboBox(cbKhachhanghd, maKH);
        
        // 3. Xử lý ComboBox nhân viên
        String maNV = tblHoaDon.getValueAt(selectedRow, 2).toString();
        setSelectedNhanVienInComboBox(cbNhanvienhd, maNV);
        
        // 4. Xử lý ngày lập
        Object obj = tblHoaDon.getValueAt(selectedRow, 3);
        if (obj != null) {
            java.time.LocalDateTime ldt = java.time.LocalDateTime.parse(obj.toString());
            java.util.Date date = java.util.Date.from(ldt.atZone(java.time.ZoneId.systemDefault()).toInstant());
            jDateChooserHoadon.setDate(date);
        }
    } catch (Exception e) {
        e.printStackTrace();
        JOptionPane.showMessageDialog(this, "Lỗi khi tải dữ liệu: " + e.getMessage(), 
            "Lỗi", JOptionPane.ERROR_MESSAGE);
    }
}
    }//GEN-LAST:event_tblHoaDonMouseClicked

    private void setSelectedNhanVienInComboBox(JComboBox<String> comboBox, String maNV) {
    for (int i = 0; i < comboBox.getItemCount(); i++) {
        String item = comboBox.getItemAt(i);
        if (item.startsWith(maNV + " - ")) { // Giả sử ComboBox hiển thị dạng "maNV - tenNV"
            comboBox.setSelectedIndex(i);
            return;
        }
    }
    comboBox.setSelectedIndex(-1); // Không tìm thấy
    }
   // Thêm vào class HoaDonForm
private void setSelectedKhachHangInComboBox(JComboBox<String> comboBox, String maKH) {
    KhachHang kh = khachHangBLL.getKhachHangByMa(maKH);
    
    if (kh == null) {
        comboBox.setSelectedIndex(-1);
        return;
    }
    
    // 2. Tìm tên KH trong ComboBox
    for (int i = 0; i < comboBox.getItemCount(); i++) {
        if (kh.getTenKh().equals(comboBox.getItemAt(i))) {
            comboBox.setSelectedIndex(i);
            return;
        }
    }
    
    // 3. Nếu không tìm thấy
    comboBox.setSelectedIndex(-1);
    
    
}
    private void btnSuahdMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_btnSuahdMouseClicked
        // TODO add your handling code here:
          String maHD = txtMaHd.getText().trim();
        KhachHang selectedKH = (KhachHang) cbKhachhanghd.getSelectedItem();
        NhanVien selectedNV = (NhanVien) cbNhanvienhd.getSelectedItem();
        
        if (maHD.isEmpty() || selectedKH == null || selectedKH.getMaKh().isEmpty() || 
            selectedNV == null || selectedNV.getMaNv().isEmpty() || jDateChooserHoadon.getDate() == null) {
            JOptionPane.showMessageDialog(this, "Vui lòng nhập đầy đủ thông tin!", 
                "Thiếu dữ liệu", JOptionPane.WARNING_MESSAGE);
            return;
        }

        HoaDon hd = new HoaDon(
            maHD, 
            selectedKH.getMaKh(), 
            selectedNV.getMaNv(), 
            new java.sql.Timestamp(jDateChooserHoadon.getDate().getTime()).toLocalDateTime()
        );

        if (hoaDonBLL.updateHoaDon(hd)) {
            JOptionPane.showMessageDialog(this, "Cập nhật hóa đơn thành công!", 
                "Thành công", JOptionPane.INFORMATION_MESSAGE);
            loadTable();
        } else {
            JOptionPane.showMessageDialog(this, "Cập nhật hóa đơn thất bại!", 
                "Lỗi", JOptionPane.ERROR_MESSAGE);
        }
//        String maHd = txtMaHd.getText();
//        String maKh = txtkh.getText();
//       String maNv = txtnv.getText();
//
//    java.util.Date date = jDateChooserHoadon.getDate();
//    java.time.LocalDateTime ngayLap = null;
//    if (date != null) {
//        ngayLap = new java.sql.Timestamp(date.getTime()).toLocalDateTime();
//    }
//
//    if (maHd.isEmpty() || maKh.isEmpty() || maNv.isEmpty() || ngayLap == null) {
//        JOptionPane.showMessageDialog(this, "Vui lòng điền đầy đủ thông tin!", "Lỗi", JOptionPane.ERROR_MESSAGE);
//        return;
//    }
//
//    HoaDon hd = new HoaDon(maHd, maKh, maNv, ngayLap);
//    boolean success = hoaDonBLL.updateHoaDon(hd);
//    if (success) {
//        loadTable();
//        JOptionPane.showMessageDialog(this, "Sửa hóa đơn thành công!");
//    } else {
//        JOptionPane.showMessageDialog(this, "Sửa hóa đơn thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
//    }
    }//GEN-LAST:event_btnSuahdMouseClicked

    private void btnXoaHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaHDActionPerformed
//        // TODO add your handling code here:
      String maHD = txtMaHd.getText().trim();
        if (maHD.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn cần xóa!", 
                "Lỗi", JOptionPane.ERROR_MESSAGE);
            return;
        }

        int confirm = JOptionPane.showConfirmDialog(this, 
            "Bạn có chắc muốn xóa hóa đơn này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
        
        if (confirm == JOptionPane.YES_OPTION) {
            if (hoaDonBLL.deleteHoaDon(maHD)) {
                JOptionPane.showMessageDialog(this, "Xóa hóa đơn thành công!", 
                    "Thành công", JOptionPane.INFORMATION_MESSAGE);
                loadTable();
                resetForm();
            } else {
                JOptionPane.showMessageDialog(this, "Xóa hóa đơn thất bại!", 
                    "Lỗi", JOptionPane.ERROR_MESSAGE);
            }
        }
//        String maHd = txtMaHd.getText();
//
//    if (maHd.isEmpty()) {
//        JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn cần xóa!", "Lỗi", JOptionPane.ERROR_MESSAGE);
//        return;
//    }
//
//    int confirm = JOptionPane.showConfirmDialog(this, "Bạn có chắc muốn xóa hóa đơn này?", "Xác nhận", JOptionPane.YES_NO_OPTION);
//    if (confirm == JOptionPane.YES_OPTION) {
//        boolean success = hoaDonBLL.deleteHoaDon(maHd);
//        if (success) {
//            loadTable(); // cập nhật lại bảng
//            resetForm(); // xóa nội dung ô input
//            JOptionPane.showMessageDialog(this, "Xóa hóa đơn thành công!");
//        } else {
//            JOptionPane.showMessageDialog(this, "Xóa hóa đơn thất bại!", "Lỗi", JOptionPane.ERROR_MESSAGE);
//        }
//    }
    }//GEN-LAST:event_btnXoaHDActionPerformed

    private void btnResetHDActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnResetHDActionPerformed
        // TODO add your handling code here:
        resetForm();
    }//GEN-LAST:event_btnResetHDActionPerformed

    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
 

    }//GEN-LAST:event_jButton5ActionPerformed

    private void txtMaHdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtMaHdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtMaHdActionPerformed

    private void jButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton5MouseClicked
//        // TODO add your handling code here:

    int selectedRow = tblHoaDon.getSelectedRow();
    if (selectedRow >= 0) {
        String maHoaDonChon = tblHoaDon.getValueAt(selectedRow, 0).toString(); // cột 0 là mã hóa đơn
        ChiTietHoaDonForm formCTHD = new ChiTietHoaDonForm(maHoaDonChon);
        formCTHD.setVisible(true);
    } else {
        JOptionPane.showMessageDialog(this, "Vui lòng chọn hóa đơn để xem chi tiết.");
    
}

    }//GEN-LAST:event_jButton5MouseClicked
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(HoaDonForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(HoaDonForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(HoaDonForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(HoaDonForm.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new HoaDonForm().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btThemhd;
    private javax.swing.JButton btnResetHD;
    private javax.swing.JButton btnSuahd;
    private javax.swing.JButton btnXoaHD;
    private javax.swing.JComboBox<String> cbNhanvienhd;
    private javax.swing.JButton jButton5;
    private com.toedter.calendar.JDateChooser jDateChooser1;
    private com.toedter.calendar.JDateChooser jDateChooser2;
    private com.toedter.calendar.JDateChooser jDateChooserHoadon;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblHoaDon;
    private javax.swing.JTextField txtMaHd;
    private javax.swing.JTextField txtSdtKh;
    private javax.swing.JTextField txtTenKh;
    // End of variables declaration//GEN-END:variables

    
}
